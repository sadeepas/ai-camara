Creating a camera app with advanced features such as image enhancement, emotion detection, and gesture recognition using AI involves multiple components. We'll use the following libraries for this task:

OpenCV: For camera functionality and image processing.
TensorFlow/Keras: For AI model integration.
Tkinter: For creating the graphical user interface (GUI).
PyInstaller: For creating an executable file.
Below is a high-level implementation of such an app. This example will cover the basics, including capturing video, applying filters, and integrating simple AI models for emotion detection and gesture recognition.

Step 1: Install Required Libraries
First, ensure you have the necessary libraries installed. You can install them using pip:

pip install opencv-python-headless opencv-python-headless tensorflow keras pillow tk

Step 2: Load AI Models
For this example, we'll assume you have pre-trained models for emotion detection and gesture recognition. You can find or train such models using datasets like FER-2013 for emotions and a custom dataset for gestures.

Step 3: Create the Camera App
Here is a simplified version of the camera app in Python

Step 4: Create an Executable
Use PyInstaller to create an executable file for your camera app. Run the following command in your terminal:

pyinstaller --onefile --windowed your_script_name.py

Replace your_script_name.py with the name of your Python script file.

Additional Features
To fully develop the app with features like multiple filters, advanced gesture recognition, and a more attractive UI, you would need to:

Enhance the UI: Use additional Tkinter widgets and styles to improve the user experience.
Implement Filters: Add more OpenCV filters for the camera feed.
Improve AI Models: Use more advanced and optimized models for better performance.
Handle Exceptions: Add error handling for a more robust application.
This code provides a basic structure for a camera app with AI capabilities. You can expand upon this foundation to include more sophisticated features and a better user interface.